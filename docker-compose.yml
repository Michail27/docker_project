version : "3.8"


services: 
  web:
    build:
      context: . 
      dockerfile: django_docker_file
    container_name: django_web_bookshop
    volumes:
      - ./book_shop:/book_shop
    ports:
      - "8000:8000"
    command:  sh -c "python3 manage.py runserver 0.0.0.0:8000"
    # command:  sh -c "gunicorn book_shop.wsgi:application -b 0.0.0.0:8000 -w 2"
    # python3 manage.py  makemigrations & python3 manage.py migrate & 
    depends_on:
      - db
      - cache
    environment:
      - POSTGRES_PASSWORD=useruser
      - POSTGRES_USER=Michail
      - POSTGRES_DB=Nikolaev_db
  db:
    image: postgres:latest
    container_name: my_bookshop_db
    environment:
      - POSTGRES_PASSWORD=useruser
      - POSTGRES_USER=Michail
      - POSTGRES_DB=Nikolaev_db

  adminer:
    image: adminer:latest
    container_name: adminer_book
    ports:
      - "8080:8080"
    depends_on:
      - db

  cache:
    image: redis:latest
    container_name: my_cache_bookshop

  node:
    image: node:latest
    container_name: node_
    command: sleep 100000
    # loadtest -n 1000 http://web:8000/shop

  celery:
    build:
      context: .
      dockerfile: django_docker_file
    container_name: celery
    volumes:
      - ./book_shop:/book_shop
    environment:
      - POSTGRES_PASSWORD=useruser
      - POSTGRES_USER=Michail
      - POSTGRES_DB=Nikolaev_db
    depends_on:
      - db
      - cache
    command: sh -c "celery -A book_shop worker -l INFO -B"